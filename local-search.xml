<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于docker搭建MySQL集群</title>
    <link href="/posts/9c10d328.html"/>
    <url>/posts/9c10d328.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一-安装docker"><a class="header-anchor" href="#一-安装docker">¶</a>一.安装docker</h1><p>详情访问教程</p><p>如果想要使用Linux图形化界面，可以安装宝塔面板，或者Linux系统桌面版</p><h1 id="二-安装MySQL"><a class="header-anchor" href="#二-安装MySQL">¶</a>二.安装MySQL</h1><p>1.在docker中拉取MySQL镜像（版本可自行选择，这里是8.0.20）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull mysql:<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>2.查看docker镜像</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker images<br><br></code></pre></td></tr></table></figure><p><img src="E:%5Chexo%5Cblog%5Csource%5Cimg%5Carticle%5C2023%5C10%5C1.png" alt=""></p><h1 id="三-部署MySQL集群（一主二从）"><a class="header-anchor" href="#三-部署MySQL集群（一主二从）">¶</a>三.部署MySQL集群（一主二从）</h1><ol><li>创建主从MySQL的配置及数据文件的存储目录</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 创建主服务的配置目录和数据目录</span><br><span class="hljs-built_in">mkdir</span> -p /usr/local/mysqlData/master/cnf<br><span class="hljs-built_in">mkdir</span> -p /usr/local/mysqlData/master/data<br><br><span class="hljs-comment"># 创建1号从服务器的配置目录和数据目录</span><br><span class="hljs-built_in">mkdir</span> -p /usr/local/mysqlData/slave/cnf<br><span class="hljs-built_in">mkdir</span> -p /usr/local/mysqlData/slave/data<br><br><span class="hljs-comment"># 创建2号从服务器的配置目录和数据目录</span><br><span class="hljs-built_in">mkdir</span> -p /usr/local/mysqlData/slave2/cnf<br><span class="hljs-built_in">mkdir</span> -p /usr/local/mysqlData/slave2/data<br><br></code></pre></td></tr></table></figure><p><strong>创建两个从服务器的配置是因为MySQL配置的server-id不能重复</strong></p><p><img src="E:%5Chexo%5Cblog%5Csource%5Cimg%5Carticle%5C2023%5C10%5C2.png" alt=""></p><ol start="2"><li>配置主服务器的配置文件</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">vim /usr/local/mysqlData/master/cnf/mysql.cnf<br><br></code></pre></td></tr></table></figure><p>配置文件如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">[mysqld]<br><span class="hljs-comment">## 设置server_id,注意要唯一</span><br>server-id=1<br><span class="hljs-comment">## 开启binlog</span><br>log-bin=mysql-bin<br><span class="hljs-comment">## binlog缓存</span><br>binlog_cache_size=1M<br><span class="hljs-comment">## binlog格式(mixed、statement、row,默认格式是statement)</span><br>binlog_format=mixed<br><span class="hljs-comment">##设置字符编码为utf8mb4</span><br>character-set-server = utf8mb4<br>collation-server = utf8mb4_unicode_ci<br>init_connect=<span class="hljs-string">&#x27;SET NAMES utf8mb4&#x27;</span><br>[client]<br>default-character-set = utf8mb4<br>[mysql]<br>default-character-set = utf8mb4<br><br></code></pre></td></tr></table></figure><ol start="3"><li>配置从服务器的配置文件</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 1号从服务器</span><br>vim /usr/local/mysqlData/slave/cnf/mysql.cnf<br><span class="hljs-comment"># 2号从服务器</span><br>vim /usr/local/mysqlData/slave2/cnf/mysql.cnf<br><br></code></pre></td></tr></table></figure><p>配置文件如下（1号的server-id设置为2，2号的server-id设置为3，不重复即可）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sh">[mysqld]<br><span class="hljs-comment">## 设置server_id,注意要唯一</span><br>server-id=2<br><span class="hljs-comment">## 开启binlog</span><br>log-bin=mysql-slave-bin<br><span class="hljs-comment">## relay_log配置中继日志</span><br>relay_log=edu-mysql-relay-bin<br><span class="hljs-comment">## 如果需要同步函数或者存储过程</span><br>log_bin_trust_function_creators=<span class="hljs-literal">true</span><br><span class="hljs-comment">## binlog缓存</span><br>binlog_cache_size=1M<br><span class="hljs-comment">## binlog格式(mixed、statement、row,默认格式是statement)</span><br>binlog_format=mixed<br><span class="hljs-comment">##设置字符编码为utf8mb4</span><br>character-set-server = utf8mb4<br>collation-server = utf8mb4_unicode_ci<br>init_connect=<span class="hljs-string">&#x27;SET NAMES utf8mb4&#x27;</span><br>slave_skip_errors=1062<br>[client]<br>default-character-set = utf8mb4<br>[mysql]<br>default-character-set = utf8mb4<br><br></code></pre></td></tr></table></figure><ol start="4"><li>创建主从MySQL容器</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 主服务器实例化</span><br>docker run -itd -p 3307:3306 --name master -v /usr/local/mysqlData/master/cnf:/etc/mysql/conf.d -v /usr/local/mysqlData/master/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.20<br><span class="hljs-comment"># 1号从服务器实例化</span><br>docker run -itd -p 3308:3306 --name slaver -v /usr/local/mysqlData/slave/cnf:/etc/mysql/conf.d -v /usr/local/mysqlData/slave/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.20 <br><span class="hljs-comment"># 2号从服务器实例化</span><br>docker run -itd -p 3309:3306 --name slaver2 -v /usr/local/mysqlData/slave/cnf:/etc/mysql/conf.d -v /usr/local/mysqlData/slave/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.20 <br></code></pre></td></tr></table></figure><p>参数解释</p><p>-p 指定容器暴露的端口,宿主机（物理机）端口: docker实例端口<br>-p 3307:3306 把物理机的3307端口给实例的端口3306端口进行映射</p><p>-v 给容器挂载存储卷，挂载到容器的某个目录<br>-v /usr/local/mysqlData/master/cnf:/etc/mysql/conf.d 把刚创建的配置文件夹映射成实例的/etc/mysql/conf.d<br>-v /usr/local/mysqlData/master/data:/var/lib/mysql 数据文件夹的映射</p><p>-e 指定环境变量，容器中可以使用该环境变量<br>-e MYSQL_ROOT_PASSWORD=123456 设置MySQL的root账号密码为123456</p><ol start="5"><li>查看创建的容器</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看运行中的容器</span><br>docker ps -a<br><span class="hljs-comment"># 查看全部容器</span><br>docker ps <br><br></code></pre></td></tr></table></figure><p><img src="E:%5Chexo%5Cblog%5Csource%5Cimg%5Carticle%5C2023%5C10%5C3.png" alt=""></p><ol start="6"><li>创建mysql连接用户</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#进入到主服务的MySQL</span><br>docker <span class="hljs-built_in">exec</span> -it master mysql -uroot -p123456<br><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs my"># 创建用户 reader设置密码为reader<br>CREATE USER reader IDENTIFIED BY &#x27;reader&#x27;;<br># 给予reader同步权限及远程连接<br>GRANT REPLICATION SLAVE ON *.* to &#x27;reader&#x27;@&#x27;%&#x27;;<br>FLUSH PRIVILEGES;<br><br></code></pre></td></tr></table></figure><p><strong>注解：其余的用户，远程连接的自行设置</strong></p><ol start="7"><li>获取主服务器的连接信息</li></ol><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># MySQL的连接信息</span><br>SHOW <span class="hljs-keyword">MASTER</span> <span class="hljs-title">STATUS</span>;<br><br><span class="hljs-comment">#新开连接 获取master实例的在docker的地址</span><br>docker inspect --<span class="hljs-attr">format=</span>&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27; <span class="hljs-keyword">master</span><br><span class="hljs-title"></span><br></code></pre></td></tr></table></figure><p><img src="E:%5Chexo%5Cblog%5Csource%5Cimg%5Carticle%5C2023%5C10%5C4.png" alt=""></p><p><img src="E:%5Chexo%5Cblog%5Csource%5Cimg%5Carticle%5C2023%5C10%5C6.png" alt=""></p><ol start="8"><li><p>从服务器连接主服务器（两台从服务器均是以下操作,要进入从服务的MySQL中设置)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 配置连接的参数<br>change master to master_host=&#x27;172.17.0.2&#x27;,master_user=&#x27;reader&#x27;,master_password=&#x27;reader&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=545;<br># 启动同步<br>start slave;<br># 查看是否成功<br>show slave status\G<br><br># 两项都为Yes时代表成功。<br># Slave_IO_Running: Yes<br># Slave_SQL_Running: Yes<br><br># 失败需要使用停止连接后检查其他账号密码，地址，pos等参数<br><br># 停止连接，如果一次成功无需使用该命令<br>stop slave;<br><br></code></pre></td></tr></table></figure><p><img src="E:%5Chexo%5Cblog%5Csource%5Cimg%5Carticle%5C2023%5C10%5C7.png" alt=""></p></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% label primary @注意如果无法成功，请在从服务器上也配置用户和主服务一样 %&#125;<br></code></pre></td></tr></table></figure><h1 id="三-结果"><a class="header-anchor" href="#三-结果">¶</a>三.结果</h1><p>主服务器执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW SLAVE HOSTS;<br><br></code></pre></td></tr></table></figure><p><img src="E:%5Chexo%5Cblog%5Csource%5Cimg%5Carticle%5C2023%5C10%5C8.png" alt=""></p><p>能从主服务器查询到从服务器的ID以及端口。完成MySQL部署。</p><h1 id="四-为了安全，要为刚刚新建的用户新建数据库和授权对改数据库的操作"><a class="header-anchor" href="#四-为了安全，要为刚刚新建的用户新建数据库和授权对改数据库的操作">¶</a>四 为了安全，要为刚刚新建的用户新建数据库和授权对改数据库的操作</h1><ol><li><p>切换root用户新建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE DATABASE mydatabase<br>  CHARACTER SET utf8mb4<br>  COLLATE utf8mb4_unicode_ci;<br><br></code></pre></td></tr></table></figure><p>上述命令将创建名为 “mydatabase” 的数据库，并将字符集设置为 “utf8mb4”，排序规则设置为 “utf8mb4_unicode_ci”。</p></li><li><p>查看数据库列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW DATABASES;<br><br></code></pre></td></tr></table></figure></li><li><p>授权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs my">GRANT SELECT, INSERT, UPDATE, DELETE ,CREATE,DROP ON mydatabase.* TO &#x27;reader&#x27;@&#x27;%&#x27;;<br></code></pre></td></tr></table></figure><p>上述命令将授予名为 “reader” 的用户在 “mydatabase” 数据库上的 SELECT、INSERT、UPDATE 和 DELETE,CREATE,DROP 权限,&quot;%&quot;为远程，“localhost为本地主机只能本地连接”。</p></li><li><p>刷新权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">FLUSH PRIVILEGES;<br><br></code></pre></td></tr></table></figure></li><li><p>确认权限是否生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW GRANTS FOR &#x27;username&#x27;@&#x27;host&#x27;;<br><br></code></pre></td></tr></table></figure><p>将 “username” 和 “host” 替换为你创建的用户的用户名和主机。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centOS安装docker</title>
    <link href="/posts/8e2b221c.html"/>
    <url>/posts/8e2b221c.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Docker及系统版本"><a class="header-anchor" href="#Docker及系统版本">¶</a>Docker及系统版本</h1><p>Docker从17.03版本之后分为CE（Community Edition: 社区版）和EE（Enterprise Edition: 企业版）。相对于社区版本，企业版本强调安全性，但需付费使用。这里我们使用社区版本即可。</p><p>Docker支持64位版本的CentOS 7和CentOS 8及更高版本，它要求Linux内核版本不低于3.10。</p><p>查看Linux版本的命令这里推荐两种：<code>lsb_release -a</code>或<code>cat /etc/redhat-release</code>。</p><p><code>lsb_release -a</code>查看效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs liunx">[ ~]$ lsb_release -a<br>LSB Version: :core-4.1-amd64:core-4.1-noarch<br>Distributor ID: CentOS<br>Description: CentOS Linux release 7.6.1810 (Core)<br>Release: 7.6.1810<br>Codename: Core<br></code></pre></td></tr></table></figure><p><code>cat /etc/redhat-release</code>查看版本效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">[~]$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /etc/redhat-release</span><br>CentOS Linux release 7.6.1810 (Core)<br></code></pre></td></tr></table></figure><p>显然，当前Linux系统为CentOS7。再查一下内核版本是否不低于3.10。</p><p>查看内核版本有三种方式：</p><p>如</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[ ~]</span>$ uname -r<br><span class="hljs-number">3.10</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1160.45</span>.<span class="hljs-number">1</span><span class="hljs-selector-class">.el7</span>.x86_64<br></code></pre></td></tr></table></figure><h1 id="Docker的自动化安装"><a class="header-anchor" href="#Docker的自动化安装">¶</a>Docker的自动化安装</h1><p>Docker官方和国内daocloud都提供了一键安装的脚本，使得Docker的安装更加便捷。</p><p>官方的一键安装方式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<br></code></pre></td></tr></table></figure><p>执行上述任一条命令，耐心等待即可完成Docker的安装。</p><h1 id="Docker手动安装"><a class="header-anchor" href="#Docker手动安装">¶</a>Docker手动安装</h1><p>手动安装Docker分三步：卸载、设置仓库、安装。</p><h2 id="卸载Docker"><a class="header-anchor" href="#卸载Docker">¶</a>卸载Docker</h2><p><strong>第一步，卸载历史版本</strong>。这一步是可选的，如果之前安装过旧版本的Docker，可以使用如下命令进行卸载：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum remove docker \<br>                  docker-client \<br>                  docker-client-latest \<br>                  docker-common \<br>                  docker-latest \<br>                  docker-latest-logrotate \<br>                  docker-logrotate \<br>                  docker-selinux \<br>                  docker-engine-selinux \<br>                  docker-engine \<br>                  docker-ce<br></code></pre></td></tr></table></figure><h2 id="设置源仓库"><a class="header-anchor" href="#设置源仓库">¶</a>设置源仓库</h2><p><strong>第二步，设置仓库</strong>。新主机上首次安装Docker Engine-Community之前，需要设置Docker仓库。此后可从仓库安装和更新Docker。</p><p>在设置仓库之前，需先按照所需的软件包。yum-utils提供了yum-config-manager，并且device mapper存储驱动程序需要device-mapper-persistent-data和lvm2。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sudo yum install -y yum-utils \<br>  device-mapper-persistent-data \<br>  lvm2<br></code></pre></td></tr></table></figure><p>执行上述命令，安装完毕即可进行仓库的设置。使用官方源地址设置命令如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sudo yum-config-manager \<br>    --add-repo \<br>    https://download.docker.com/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><p>通常，官方的源地址比较慢，可将上述的源地址替换为国内比较快的地址：</p><ul><li>阿里云：http:**//<strong><a href="http://mirrors.aliyun.com">mirrors.aliyun.com</a></strong>/<strong>docker-ce</strong>/<strong>linux</strong>/<strong>centos</strong>/**docker-ce.repo</li><li>清华大学源：https:**//<strong><a href="http://mirrors.tuna.tsinghua.edu.cn">mirrors.tuna.tsinghua.edu.cn</a></strong>/<strong>docker-ce</strong>/<strong>linux</strong>/<strong>centos</strong>/**docker-ce.repo</li></ul><p>仓库设置完毕，即可进行Docker的安装。</p><h1 id="docker-安装"><a class="header-anchor" href="#docker-安装">¶</a>docker 安装</h1><p>执行一下命令，安装最新版本的 Docker Engine-Community 和 containerd。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo yum install -y docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p>docker-ce为社区免费版本。稍等片刻，docker即可安装成功。但安装完成之后的默认是未启动的，需要进行启动操作。</p><p>如果不需要docker-ce-cli或containerd.io可直接执行如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install -y docker-ce<br><br></code></pre></td></tr></table></figure><p>至此，完成Docker安装。</p><h1 id="docke-启动"><a class="header-anchor" href="#docke-启动">¶</a>docke 启动</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo systemctl start docker<br></code></pre></td></tr></table></figure><p>通过运行hello-world镜像来验证是否正确安装了Docker Engine-Community。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">// 拉取镜像<br>sudo docker pull hello-world<br>// 执行hello-world<br>sudo docker run hello-world<br></code></pre></td></tr></table></figure><p>如果执行之后，控制台显示如下信息，则说明Docker安装和启动成功：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@iZ8vb8pfb2awsz4qy7vm7qZ ~]<span class="hljs-comment"># docker run hello-world</span><br><br>Hello from Docker!<br>This message shows that your installation appears to be working correctly.<br>……<br></code></pre></td></tr></table></figure><p>除了启动Docker，一些其他启动相关的命令：</p><ul><li>守护进程重启：systemctl daemon-reload</li><li>重启Docker服务：systemctl restart docker / service docker restart</li><li>关闭Docker服务：docker service docker stop / docker systemctl stop docker</li></ul><h1 id="删除Docker"><a class="header-anchor" href="#删除Docker">¶</a>删除Docker</h1><p>删除安装包：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum remove docker-ce<br></code></pre></td></tr></table></figure><p>删除镜像、容器、配置文件等内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">rm</span> -rf /var/lib/docker<br></code></pre></td></tr></table></figure><h1 id="docker其他常见命令"><a class="header-anchor" href="#docker其他常见命令">¶</a>docker其他常见命令</h1><p>安装完成Docker之后，这里汇总列一下常见的Docker操作命令：</p><ul><li>搜索仓库镜像：docker search 镜像名</li><li>拉取镜像：docker pull 镜像名</li><li>查看正在运行的容器：docker ps</li><li>查看所有容器：docker ps -a</li><li>删除容器：docker rm container_id</li><li>查看镜像：docker images</li><li>删除镜像：docker rmi image_id</li><li>启动（停止的）容器：docker start 容器ID</li><li>停止容器：docker stop  容器ID</li><li>重启容器：docker restart 容器ID</li><li>启动（新）容器：docker run -it ubuntu /bin/bash</li><li>进入容器：<code>docker attach 容器ID</code>或<code>docker exec -it 容器ID /bin/bash</code>，推荐使用后者。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL报错1055 - Expression</title>
    <link href="/posts/a1a709fa.html"/>
    <url>/posts/a1a709fa.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="报错内容如下"><a class="header-anchor" href="#报错内容如下">¶</a>报错内容如下</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">1055 - Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#x27;fbjs.mscc.ContactTime&#x27; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by, Time: 0.000000s<br></code></pre></td></tr></table></figure><h1 id="错误原因"><a class="header-anchor" href="#错误原因">¶</a>错误原因</h1><p>在mysql5.7以上的版本中，对于 group by 的这种聚合操作，如果在select 中的列，没有在group by 中出现，那么这个SQL是不合法的，因为列不在group by的从句中，所以对于设置了这个mode的数据库，在使用group by 的时候，就要用MAX()，SUM()，ANT_VALUE()的这种聚合函数，才能完成GROUP BY 的聚合操作</p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-setting">https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-setting</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-changes">Mode Changes in MySQL 5.7</a>.</p><p>ONLY_FULL_GROUP_BY的设定，将不允许查询字段包括非聚集列</p><h1 id="错误解决"><a class="header-anchor" href="#错误解决">¶</a>错误解决</h1><h2 id="1-确认MySQL版本"><a class="header-anchor" href="#1-确认MySQL版本">¶</a>1.确认MySQL版本</h2><p>查询mysql服务器版本：以下命令在终端或者navicat中输入执行均可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select @@version<br></code></pre></td></tr></table></figure><h2 id="2-查看sql-mode的语法"><a class="header-anchor" href="#2-查看sql-mode的语法">¶</a>2.查看sql_mode的语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 任选其一<br>SELECT @@GLOBAL.sql_mode;<br>SELECT @@SESSION.sql_mode;<br><br>--显示的结果<br>ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION<br></code></pre></td></tr></table></figure><h2 id="3-方法一"><a class="header-anchor" href="#3-方法一">¶</a>3.方法一</h2><p>查询mysql 1055错误码发现问题为在mysql的配置中如果设置了sql_mode包含ONLY_FULL_GROUP_BY值得话，在进行查询时必须要将select的字段都包含在group by 中。<br>即 select a,b from xxx group by a,b<br>否则就会报错。</p><h2 id="4-方法二"><a class="header-anchor" href="#4-方法二">¶</a>4. 方法二</h2><p>#修改sql_mode的语法</p><p>通过修改配置文件my.cnf来解决这个问题的。</p><ol><li>关闭正在运行的mysql</li><li>修改/etc/my.cnf，将sql_mode=中的only_full_group_by给删掉</li><li>重启mysql，再执行出错的sql发现能成功执行了</li></ol><p>如果没有my.cnf文件，解决方式查看（有模板）<a href="https://blog.csdn.net/qq_31708763/article/details/104357798">https://blog.csdn.net/qq_31708763/article/details/104357798</a></p><p>默认优先选取/etc/my.cnf这个是启动脚本里轮询的第一个位置。</p><p>推荐使用更改my.cnf方法更改sql_mode，以防止后续重启mysql服务或者服务器配置失效。另外提一句，8.0版本目前测试是在my.cnf中配置忽略大小写无用，除非在数据库初始化时候指定，估计是高版本更新都是这样。</p><p>sql_mode常用值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ONLY_FULL_GROUP_BY： 对于GROUP BY聚合操作，如果在SELECT中的列，没有在GROUP<br>BY中出现，那么这个SQL是不合法的，因为列不在GROUP BY从句中<br> <br>NO_AUTO_VALUE_ON_ZERO： 该值影响自增长列的插入。默认设置下，插入0或NULL代表生成下一个自增长值。如果用户<br>希望插入的值为0，而该列又是自增长的，那么这个选项就有用了。<br> <br>STRICT_TRANS_TABLES： 在该模式下，如果一个值不能插入到一个事务表中，则中断当前的操作，对非事务表不做限制<br>NO_ZERO_IN_DATE： 在严格模式下，不允许日期和月份为零<br> <br>NO_ZERO_DATE： 设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。<br> <br>ERROR_FOR_DIVISION_BY_ZERO： 在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如<br>果未给出该模式，那么数据被零除时MySQL返回NULL<br> <br>NO_AUTO_CREATE_USER： 禁止GRANT创建密码为空的用户<br> <br>NO_ENGINE_SUBSTITUTION：<br>如果需要的存储引擎被禁用或未编译，那么抛出错误。不设置此值时，用默认的存储引擎替代，并抛出一个异常<br> <br>PIPES_AS_CONCAT：<br>将”||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似<br> <br>ANSI_QUOTES： 启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符<br></code></pre></td></tr></table></figure><h2 id="5-方法四"><a class="header-anchor" href="#5-方法四">¶</a>5.方法四</h2><p>修改global sql_mode:  电脑重启后失效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SET sql_mode =&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
      <category>开发错误</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>行测</title>
    <link href="/posts/efaa2bae.html"/>
    <url>/posts/efaa2bae.html</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e20f6d2e07cfe997288fab2e2bc300acbcdc186545fa94b75c925acf40f474a9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>公考</category>
      
    </categories>
    
    
    <tags>
      
      <tag>公考</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-fluid主题美化</title>
    <link href="/posts/45847.html"/>
    <url>/posts/45847.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Hexo-Fluid-美化"><a class="header-anchor" href="#Hexo-Fluid-美化">¶</a>Hexo + Fluid 美化</h1><div class="note note-warning">            <p>注意</p><p>本文中的 “博客配置” 指的 Hexo 博客目录下的 _config.yml。</p><p>“主题配置” 指的是 theme/fluid/_config.yml 或者 _config.fluid.yml 。</p><p>注意区别</p>          </div><h1 id="添加网站运行时间"><a class="header-anchor" href="#添加网站运行时间">¶</a>添加网站运行时间</h1><p>页脚添加网站运行时间，只需要在主题配置中的<font color=HotPink> footer: content </font>&gt;添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">footer:</span><br>  <span class="hljs-attr">content:</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">    &lt;div&gt;</span><br><span class="hljs-string">      &lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;</span><br><span class="hljs-string">      &lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="hljs-string">      &lt;script src=&quot;/js/duration.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-string">    &lt;/div&gt;</span><br><span class="hljs-string">  &#x27;</span><br></code></pre></td></tr></table></figure><p>之后在主题目录下创建<font color=HotPink> source/js/duration.js</font>，内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createtime</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> grt= <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;03/03/2021 12:00:00&quot;</span>);<span class="hljs-comment">//在此处修改你的建站时间，格式：月/日/年 时:分:秒</span><br>    now.<span class="hljs-title function_">setTime</span>(now.<span class="hljs-title function_">getTime</span>()+<span class="hljs-number">250</span>);<br>    days = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>; dnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(days);<br>    hours = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum); hnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(hours);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(hnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;hnum = <span class="hljs-string">&quot;0&quot;</span> + hnum;&#125; minutes = (now - grt ) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum);<br>    mnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(minutes); <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(mnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;mnum = <span class="hljs-string">&quot;0&quot;</span> + mnum;&#125;<br>    seconds = (now - grt ) / <span class="hljs-number">1000</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * <span class="hljs-number">60</span> * hnum) - (<span class="hljs-number">60</span> * mnum);<br>    snum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(seconds); <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(snum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;snum = <span class="hljs-string">&quot;0&quot;</span> + snum;&#125;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;timeDate&quot;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;本站已安全运行 &quot;</span>+dnum+<span class="hljs-string">&quot; 天 &quot;</span>;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;times&quot;</span>).<span class="hljs-property">innerHTML</span> = hnum + <span class="hljs-string">&quot; 小时 &quot;</span> + mnum + <span class="hljs-string">&quot; 分 &quot;</span> + snum + <span class="hljs-string">&quot; 秒&quot;</span>;<br>&#125;<br><span class="hljs-built_in">setInterval</span>(<span class="hljs-string">&quot;createtime()&quot;</span>,<span class="hljs-number">250</span>);<br></code></pre></td></tr></table></figure><p>将建站时间修改为你自己的建站时间，即可在页脚加入网站运行时间</p><h1 id="添加一言"><a class="header-anchor" href="#添加一言">¶</a>添加一言</h1><p>在主题配置 <font color=HotPink>_config.yml </font>中找到<font color=HotPink> custom_head </font>，修改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_head:</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">    &lt;!-- 一言 --&gt;</span><br><span class="hljs-string">    &lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</span><br><span class="hljs-string">    &#x27;</span><br></code></pre></td></tr></table></figure><p>修改完成之后，在任意地方添加如下代码即可获取一言</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;hitokoto&quot;</span>&gt;</span>:D 获取中...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="添加音乐插件"><a class="header-anchor" href="#添加音乐插件">¶</a>添加音乐插件</h1><h2 id="1-安装aplayer"><a class="header-anchor" href="#1-安装aplayer">¶</a>1.安装aplayer</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#npm安装</span><br>npm install --save hexo-tag-aplayer<br><br></code></pre></td></tr></table></figure><p>可以看到在node_module文件夹中多出来一个aplayer文件夹即可</p><p><img src="%5Cimg%5Carticle%5C2023%5C8%5C1.png" alt=""></p><p>为了方便，将这个dist文件夹复制一份到主题目录下的source文件夹中。</p><h2 id="2-设置博客配置文件"><a class="header-anchor" href="#2-设置博客配置文件">¶</a>2.设置博客配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">aplayer:</span><br>  <span class="hljs-attr">meting:</span> <span class="hljs-literal">true</span><br><br></code></pre></td></tr></table></figure><h2 id="3-设置音乐"><a class="header-anchor" href="#3-设置音乐">¶</a>3.设置音乐</h2><p>接着找到一个歌单、歌曲或专辑的链接，复制这个链接的id，这里以QQ音乐举例： <a href="https://y.qq.com/n/yqq/playlist/7868042847.html">https://y.qq.com/n/yqq/playlist/7868042847.html</a> ，这个歌单的id就是7868042847；</p><p>最后将以下示例代码插入到你想要呈现播放器的地方即可：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;linkrel=&quot;stylesheet&quot;href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css&quot;&gt; <br>&lt;scriptsrc=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js&quot;&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br>&lt;scriptsrc=&quot;https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js&quot;&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br><br></code></pre></td></tr></table></figure><p>插入播放器</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% meting &quot;7868005687&quot; &quot;tencent&quot; &quot;playlist&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:1000px&quot; &quot;preload:auto&quot; %&#125;<br><br></code></pre></td></tr></table></figure><p>其中的<code>tencent</code>为公司名，也就是音乐平台，如: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code>；有关选项列表如下:</p><p><img src="%5Cimg%5Carticle%5C2023%5C8%5C3.png" alt=""></p><h2 id="4-进阶-为博客添加音乐页面"><a class="header-anchor" href="#4-进阶-为博客添加音乐页面">¶</a>4.进阶-为博客添加音乐页面</h2><h3 id="4-1使用命令新建名为music的page"><a class="header-anchor" href="#4-1使用命令新建名为music的page">¶</a>4.1使用命令新建名为music的page</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo new page music<br><br></code></pre></td></tr></table></figure><h3 id="2-打开博客根目录-source-music-index-md文件，写入以下代码即可"><a class="header-anchor" href="#2-打开博客根目录-source-music-index-md文件，写入以下代码即可">¶</a>2.打开<code>博客根目录/source/music/index.md</code>文件，写入以下代码即可</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css&quot;</span>&gt;</span></span> <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> <br>&#123;% meting &quot;7868005687&quot; &quot;tencent&quot; &quot;playlist&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:1000px&quot; &quot;preload:auto&quot; %&#125;<br><br></code></pre></td></tr></table></figure><p>其他详见：<a href="https://aplayer.js.org/#/zh-Hans/">APlayer官方文档</a></p><h1 id="添加新页面（类似about页面）"><a class="header-anchor" href="#添加新页面（类似about页面）">¶</a>添加新页面（类似about页面）</h1><h2 id="1-使用命令创建新页面"><a class="header-anchor" href="#1-使用命令创建新页面">¶</a>1.使用命令创建新页面</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo new page 页面名称<br></code></pre></td></tr></table></figure><p>在根目录下的<code>source</code> 文件夹中找到 <code>databases</code> 文件夹，并打开里面的index.md文件。</p><h2 id="2-第二步"><a class="header-anchor" href="#2-第二步">¶</a>2.第二步</h2><p>在根目录下的<code>source</code> 文件夹中找到 <code>databases</code> 文件夹，并打开里面的index.md文件。<br>在头部里面添加以下代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">layout: databases <br>//此databases可以任取，但为方便管理，推荐这样取名。并且需要记住此名称，因为后面还需要用到。<br></code></pre></td></tr></table></figure><h2 id="3-第三步"><a class="header-anchor" href="#3-第三步">¶</a>3.第三步</h2><p>找到主题配置文件，注意，不是根目录的配置文件，是themes文件夹里面的配置文件，即你下载的主题里面的配置文件。</p><p>再在配置文件里面，找到类似的代码的地方。不一定和这个一模一样的，找到类似的代码的地方即可。如：友链页、自定义页、关于页、标签页、分类页、归档页等写配置的地方。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 404页</span><br><span class="hljs-comment"># 404 Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">page404:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">avter.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">85</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span> <span class="hljs-string">&quot;Page not found&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="4-第四步"><a class="header-anchor" href="#4-第四步">¶</a>4.第四步</h2><p>添加页面配置代码。根据以下代码可以自行修改，或者是根据关于（about）的配置代码进行修改。<br><strong>注意：这里的databases就是在index.md里面写的那个名称。</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 资料库</span><br><span class="hljs-comment"># databases Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">databases:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">avter.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span> <span class="hljs-string">资料库</span> <span class="hljs-comment"># 打字机内容,即页面显示的内容</span><br><br><br><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-comment"># 关于页</span><br><span class="hljs-comment"># About Page</span><br><span class="hljs-comment">#---------------------------</span><br><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">avter.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br>  <span class="hljs-attr">subtitle:</span> <span class="hljs-string">关于写者</span> <span class="hljs-comment"># 打字机内容</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">avter.png</span> <span class="hljs-comment"># 头像图片</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;铁蛋&quot;</span><br>  <span class="hljs-attr">introduce:</span> <span class="hljs-string">&quot;青春是用来奋斗的。如果有理想，就努力去实现T。&quot;</span><br>  <span class="hljs-attr">icons:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&quot;iconfont icon-qq-fill&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">&quot;顽强&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&quot;iconfont icon-wechat-fill&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">&quot;拼搏&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&quot;iconfont icon-alipay-fill&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">&quot;奋斗&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&quot;iconfont icon-map&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">&quot;坚持&quot;</span> &#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="5-第五步"><a class="header-anchor" href="#5-第五步">¶</a>5.第五步</h2><p>这也是最重要的一步。添加文件。在主题目录（themes文件夹）下，打开自己的主题文件夹，找到 <code>layout</code> 文件夹，再在里面找到 <code>about.ejs</code> 文件（根据自行的配置，找对应的文件）。复制一份，并将其命名为 <code>databases.ejs</code> （名称即在第四步中的那个名称）</p><h2 id="6-第六步"><a class="header-anchor" href="#6-第六步">¶</a>6.第六步</h2><p>修改刚复制好的文件里面的代码。</p><p>首先，这是被复制的文件的代码（根据自行的配置，所选的文件不同，代码可能不同），即 <code>about.ejs</code> 文件的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;%<br>page.<span class="hljs-property">layout</span> = <span class="hljs-string">&quot;about&quot;</span><br>page.<span class="hljs-property">title</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">title</span> || <span class="hljs-title function_">__</span>(<span class="hljs-string">&#x27;about.title&#x27;</span>)<br>page.<span class="hljs-property">subtitle</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">subtitle</span> || <span class="hljs-title function_">__</span>(<span class="hljs-string">&#x27;about.subtitle&#x27;</span>)<br>page.<span class="hljs-property">banner_img</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">banner_img</span><br>page.<span class="hljs-property">banner_img_height</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">banner_img_height</span><br>page.<span class="hljs-property">banner_mask_alpha</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">banner_mask_alpha</span><br>%&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-info&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-name&quot;</span>&gt;</span>&lt;%- theme.about.name %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-intro&quot;</span>&gt;</span>&lt;%- theme.about.introduce %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-icons&quot;</span>&gt;</span></span><br><span class="language-xml">      &lt;% for(const each of theme.about.icons || []) &#123; %&gt;</span><br><span class="language-xml">        &lt;% if (!each.class) continue; %&gt;</span><br><span class="language-xml">        &lt;% var cls = each.class %&gt;</span><br><span class="language-xml">        &lt;% var isQr = each.qrcode %&gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= isQr ? &#x27;javascript:;&#x27; : url_for(each.link) %&gt;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&lt;%= isQr ? &#x27;qr-trigger&#x27; : &#x27;&#x27; %&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">           &lt;%= !isQr &amp;&amp; each.tip ? &#x27;hint--bottom hint--rounded&#x27; : &#x27;&#x27; %&gt;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">           &lt;%= <span class="hljs-string">!isQr</span> &amp;&amp; <span class="hljs-attr">each.tip</span> ? &#x27;<span class="hljs-attr">aria-label</span>=<span class="hljs-string">&#x27; + each.tip : &#x27;</span>&#x27; %&gt;</span></span><br><span class="language-xml">        &gt;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&lt;%= cls %&gt;&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br><span class="language-xml">          &lt;% if (isQr) &#123; %&gt;</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;qr-img&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&lt;%= url_for(each.qrcode) %&gt;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;qrcode&quot;</span> /&gt;</span></span><br><span class="language-xml">          &lt;% &#125; %&gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">      &lt;% &#125; %&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-content mt-5&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;markdown-body&quot;</span>&gt;</span></span><br><span class="language-xml">    &lt;%- page.content %&gt;</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">  &lt;% if(page.comments) &#123; %&gt;</span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- Comments --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;comments&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;comments&quot;</span>&gt;</span></span><br><span class="language-xml">      &lt;% var type %&gt;</span><br><span class="language-xml">      &lt;% if (typeof page.comment === &#x27;string&#x27; &amp;&amp; page.comment !== &#x27;&#x27;) &#123; %&gt;</span><br><span class="language-xml">        &lt;% type = &#x27;_partial/comments/&#x27; + page.comment %&gt;</span><br><span class="language-xml">      &lt;% &#125; else &#123; %&gt;</span><br><span class="language-xml">        &lt;% type = &#x27;_partial/comments/&#x27; + theme.post.comments.type %&gt;</span><br><span class="language-xml">      &lt;% &#125; %&gt;</span><br><span class="language-xml">      &lt;%- partial(type) %&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></span><br><span class="language-xml">  &lt;% &#125; %&gt;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p>然后修改，其实就只是修改了第三行的代码，其他的都没有改变。将第三行代码原来的 about 改为了 databases 而已。这个名称就是第四步里面的名称。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;%<br>page.<span class="hljs-property">layout</span> = <span class="hljs-string">&quot;about&quot;</span><br>page.<span class="hljs-property">title</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">title</span> || <span class="hljs-title function_">__</span>(<span class="hljs-string">&#x27;about.title&#x27;</span>)<br>page.<span class="hljs-property">subtitle</span> = theme.<span class="hljs-property">databases</span>.<span class="hljs-property">subtitle</span> || <span class="hljs-title function_">__</span>(<span class="hljs-string">&#x27;databases.subtitle&#x27;</span>)<br>page.<span class="hljs-property">banner_img</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">banner_img</span><br>page.<span class="hljs-property">banner_img_height</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">banner_img_height</span><br>page.<span class="hljs-property">banner_mask_alpha</span> = theme.<span class="hljs-property">about</span>.<span class="hljs-property">banner_mask_alpha</span><br>%&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-info&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-name&quot;</span>&gt;</span>&lt;%- theme.about.name %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-intro&quot;</span>&gt;</span>&lt;%- theme.about.introduce %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-icons&quot;</span>&gt;</span></span><br><span class="language-xml">      &lt;% for(const each of theme.about.icons || []) &#123; %&gt;</span><br><span class="language-xml">        &lt;% if (!each.class) continue; %&gt;</span><br><span class="language-xml">        &lt;% var cls = each.class %&gt;</span><br><span class="language-xml">        &lt;% var isQr = each.qrcode %&gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%= isQr ? &#x27;javascript:;&#x27; : url_for(each.link) %&gt;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&lt;%= isQr ? &#x27;qr-trigger&#x27; : &#x27;&#x27; %&gt;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">           &lt;%= !isQr &amp;&amp; each.tip ? &#x27;hint--bottom hint--rounded&#x27; : &#x27;&#x27; %&gt;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">           &lt;%= <span class="hljs-string">!isQr</span> &amp;&amp; <span class="hljs-attr">each.tip</span> ? &#x27;<span class="hljs-attr">aria-label</span>=<span class="hljs-string">&#x27; + each.tip : &#x27;</span>&#x27; %&gt;</span></span><br><span class="language-xml">        &gt;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;&lt;%= cls %&gt;&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span></span><br><span class="language-xml">          &lt;% if (isQr) &#123; %&gt;</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;qr-img&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&lt;%= url_for(each.qrcode) %&gt;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;qrcode&quot;</span> /&gt;</span></span><br><span class="language-xml">          &lt;% &#125; %&gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><br><span class="language-xml">      &lt;% &#125; %&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;about-content mt-5&quot;</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;markdown-body&quot;</span>&gt;</span></span><br><span class="language-xml">    &lt;%- page.content %&gt;</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">  &lt;% if(page.comments) &#123; %&gt;</span><br><span class="language-xml">    <span class="hljs-comment">&lt;!-- Comments --&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;comments&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;comments&quot;</span>&gt;</span></span><br><span class="language-xml">      &lt;% var type %&gt;</span><br><span class="language-xml">      &lt;% if (typeof page.comment === &#x27;string&#x27; &amp;&amp; page.comment !== &#x27;&#x27;) &#123; %&gt;</span><br><span class="language-xml">        &lt;% type = &#x27;_partial/comments/&#x27; + page.comment %&gt;</span><br><span class="language-xml">      &lt;% &#125; else &#123; %&gt;</span><br><span class="language-xml">        &lt;% type = &#x27;_partial/comments/&#x27; + theme.post.comments.type %&gt;</span><br><span class="language-xml">      &lt;% &#125; %&gt;</span><br><span class="language-xml">      &lt;%- partial(type) %&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></span><br><span class="language-xml">  &lt;% &#125; %&gt;</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><h2 id="7-添加导航栏"><a class="header-anchor" href="#7-添加导航栏">¶</a>7.添加导航栏</h2><p>在主题配置文件中添加新建的页面的导航栏</p><h1 id="文章加密"><a class="header-anchor" href="#文章加密">¶</a>文章加密</h1><h2 id="1-使用命令下载hexo-blog-encrypt"><a class="header-anchor" href="#1-使用命令下载hexo-blog-encrypt">¶</a>1.使用命令下载<a href="https://so.csdn.net/so/search?q=hexo&amp;spm=1001.2101.3001.7020">hexo</a>-blog-encrypt</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install --save hexo-blog-encrypt<br></code></pre></td></tr></table></figure><h2 id="2-在文章开头设置密码"><a class="header-anchor" href="#2-在文章开头设置密码">¶</a>2.在文章开头设置密码</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: Hello World<br>date: 2020-12-18 20:44:18<br><span class="hljs-section">password: (填写你想设置的密码)</span><br><span class="hljs-section">---</span><br><br></code></pre></td></tr></table></figure><h2 id="3-在博客根目录下的-config-xml中添加"><a class="header-anchor" href="#3-在博客根目录下的-config-xml中添加">¶</a>3.在博客根目录下的<code>_config.xml</code>中添加:</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">encrypt:</span> <span class="hljs-comment"># hexo-blog-encrypt</span><br>  <span class="hljs-attr">abstract:</span> <span class="hljs-string">这里有东西被加密了，需要输入密码查看哦。</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">您好,</span> <span class="hljs-string">这里需要密码.</span><br>  <span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码A</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码B</span>&#125;<br>  <span class="hljs-attr">template:</span> <span class="hljs-string">&lt;div</span> <span class="hljs-string">id=&quot;hexo-blog-encrypt&quot;</span> <span class="hljs-string">data-wpm=&quot;&#123;&#123;hbeWrongPassMessage&#125;&#125;&quot;</span> <span class="hljs-string">data-whm=&quot;&#123;&#123;hbeWrongHashMessage&#125;&#125;&quot;&gt;&lt;div</span> <span class="hljs-string">class=&quot;hbe-input-container&quot;&gt;&lt;input</span> <span class="hljs-string">type=&quot;password&quot;</span> <span class="hljs-string">id=&quot;hbePass&quot;</span> <span class="hljs-string">placeholder=&quot;&#123;&#123;hbeMessage&#125;&#125;&quot;</span> <span class="hljs-string">/&gt;&lt;label&gt;&#123;&#123;hbeMessage&#125;&#125;&lt;/label&gt;&lt;div</span> <span class="hljs-string">class=&quot;bottom-line&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script</span> <span class="hljs-string">id=&quot;hbeData&quot;</span> <span class="hljs-string">type=&quot;hbeData&quot;</span> <span class="hljs-string">data-hmacdigest=&quot;&#123;&#123;hbeHmacDigest&#125;&#125;&quot;&gt;&#123;&#123;hbeEncryptedData&#125;&#125;&lt;/script&gt;&lt;/div&gt;</span><br>  <span class="hljs-attr">wrong_pass_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个密码看着不太对,</span> <span class="hljs-string">请再试试.</span><br>  <span class="hljs-attr">wrong_hash_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个文章不能被校验,</span> <span class="hljs-string">不过您还是能看看解密后的内容.</span><br><br></code></pre></td></tr></table></figure><h1 id="其他美化后续添加"><a class="header-anchor" href="#其他美化后续添加">¶</a>其他美化后续添加</h1><h1 id="Hexo文件压缩"><a class="header-anchor" href="#Hexo文件压缩">¶</a>Hexo文件压缩</h1><div class="note note-info">            <p>** 为什么要压缩页面静态资源 **</p><p>对于个人博客来说，优化页面的访问速度是很有必要的，如果打开你的个人站点，加载个首页就要十几秒，页面长时间处于空白状态，想必没什么人能够忍受得了吧。我个人觉得，如果能把页面的加载时间控制在三四秒内，就很不错了。</p><p>那么怎么提高<a href="https://so.csdn.net/so/search?q=hexo&amp;spm=1001.2101.3001.7020">hexo</a>这个静态博客的页面加载速度呢？可以从以下的几个方面去入手：</p><ol><li>将js文件尽可能放置到body的闭合标签之前，因为在加载或者引入js文件时是阻塞式的，如果我们在页面的最开始就引入这些js文件，而这些文件又比较大，会造成页面在渲染时长时间处于白屏状态。</li><li>尽量避免去引用访问速度非常低下的cdn或者图片，可以改用访问速度更快的cdn，或者将难以迅速加载的图片保存到自己的站点目录下，以免在加载图片时耗费了大量的时间，最后还加载不出来。</li><li>对页面的静态资源进行压缩，包括css、js和html等文件。我们自己添加的css和js文件为了可读性，往往会有很多换行和空格，这些对于浏览器来说并没什么卵用，甚至还会降低渲染页面的速度。至于html文件，由于Markdown转成html的bug，会导致页面存在大量的空白，如果你查看下页面的源代码，就会发现这些大量的空白符，十分难看。这也会造成页面渲染的性能问题。</li></ol>          </div><h2 id="在站点根目录下安装hexo-neat"><a class="header-anchor" href="#在站点根目录下安装hexo-neat">¶</a>在站点根目录下安装hexo-neat</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install hexo-neat --save<br></code></pre></td></tr></table></figure><p><strong>为站点配置文件添加相关配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># hexo-neat</span><br><span class="hljs-comment"># 博文压缩</span><br><span class="hljs-attr">neat_enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment"># 压缩html</span><br><span class="hljs-attr">neat_html:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br><span class="hljs-comment"># 压缩css  </span><br><span class="hljs-attr">neat_css:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/*.min.css&#x27;</span><br><span class="hljs-comment"># 压缩js</span><br><span class="hljs-attr">neat_js:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">mangle:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">output:</span><br>  <span class="hljs-attr">compress:</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/*.min.js&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/jquery.fancybox.pack.js&#x27;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/index.js&#x27;</span>  <br></code></pre></td></tr></table></figure><p>就可以正常发布部署了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean<br>hexo g<br>hexo d<br>hexo s<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo，Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+git分支实现多终端工作</title>
    <link href="/posts/38732.html"/>
    <url>/posts/38732.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note note-info">            <p>问题来了，如果你现在在自己的笔记本上写的博客，部署在了网站上，那么你在家里用台式机，或者实验室的台式机，发现你电脑里面没有博客的文件，或者要换电脑了，最后不知道怎么移动文件，怎么办？</p><p>在这里我们就可以利用git的分支系统进行多终端工作了，这样每次打开不一样的电脑，只需要进行简单的配置和在github上把文件同步下来，就可以无缝操作了。</p>          </div><h1 id="机制"><a class="header-anchor" href="#机制">¶</a>机制</h1><p>机制是这样的，由于hexo d上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。</p><p><img src="/img/article/2023/7/1.png" alt=""></p><p>也就是上传的是在本地目录里自动生成的<code>.deploy_git</code>里面。其他文件 ，包括我们写在source 里面的，和<a href="https://www.zhihu.com/search?q=%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A489124966%7D">配置文件</a>，主题文件，都没有上传到github。所以可以利用git的分支管理，将源文件上传到github的另一个分支即可。</p><h1 id="上传分支"><a class="header-anchor" href="#上传分支">¶</a>上传分支</h1><p>首先，先在github上新建一个hexo分支，如图：</p><p><img src="/img/article/2023/7/2.jpg" alt=""></p><p>然后在这个仓库的settings中，选择默认分支为<a href="https://www.zhihu.com/search?q=hexo%E5%88%86%E6%94%AF&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A489124966%7D">hexo分支</a>（这样每次同步的时候就不用指定分支，比较方便）。</p><p><img src="/img/article/2023/7/3.png" alt=""></p><p>然后在本地的任意目录下，打开git bash，将分支克隆下来</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> 链接地址<br></code></pre></td></tr></table></figure><p>接下来在克隆到本地的<code>ZJUFangzh.github.io</code>中，把除了.git 文件夹外的所有文件都删掉</p><p>把之前我们写的博客源文件全部复制过来，除了<code>.deploy_git</code>。这里应该说一句，复制过来的源文件应该有一个<code>.gitignore</code>，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs .gitignore">.DS_Store<br>Thumbs.db<br>db.json<br>*.log<br>node_modules/<br>public/<br>.deploy*/<br></code></pre></td></tr></table></figure><p>注意，如果你之前克隆过<a href="https://www.zhihu.com/search?q=theme&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A489124966%7D">theme</a>中的主题文件，那么应该把主题文件中的<code>.git</code>文件夹删掉，因为git不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了</p><p>然后上传</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git add .<br>git commit –m <span class="hljs-string">&quot;add branch&quot;</span><br>git push <br></code></pre></td></tr></table></figure><p>这样就上传完了，可以去你的github上看一看hexo分支有没有上传上去，其中<code>node_modules</code>、<code>public</code>、<code>db.json</code>已经被忽略掉了，没有关系，不需要上传的，因为在别的电脑上需要重新输入命令安装 。</p><p><img src="/img/article/2023/7/4.png" alt=""></p><p>这样就上传完了。</p><h1 id="更换电脑操作"><a class="header-anchor" href="#更换电脑操作">¶</a>更换电脑操作</h1><p>一样的，跟之前的环境搭建一样，安装git、node、hexo</p><p>但是已经不需要初始化了，</p><p>直接在任意文件夹下，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> 链接<br></code></pre></td></tr></table></figure><p>然后进入克隆到的文件夹：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> xxx.github.io<br>npm install<br>npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>生成，部署</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo g<br>hexo d<br><br></code></pre></td></tr></table></figure><p>然后就可以开始写你的新博客了</p><h1 id="Tips"><a class="header-anchor" href="#Tips">¶</a><strong>Tips:</strong></h1><ol><li><p>不要忘了，每次写完最好都把源文件上传一下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">git add .<br>git commit –m <span class="hljs-string">&quot;xxxx&quot;</span><br>git push <br><br></code></pre></td></tr></table></figure></li><li><p>如果是在已经编辑过的电脑上，已经有<a href="https://www.zhihu.com/search?q=clone&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A489124966%7D">clone</a>文件夹了，那么，每次只要和远端同步一下就行了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git pull<br></code></pre></td></tr></table></figure></li><li><p><a href="https://blog.csdn.net/weixin_46686999/article/details/105184794">windows搭建Hexo—超详细</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo迁移</title>
    <link href="/posts/21293.html"/>
    <url>/posts/21293.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-在新电脑上安装git和Node-js"><a class="header-anchor" href="#1-在新电脑上安装git和Node-js">¶</a>1.在新电脑上安装git和Node.js</h1><h1 id="2-安装Hexo"><a class="header-anchor" href="#2-安装Hexo">¶</a>2.安装Hexo</h1><h1 id="3-复制原电脑上的数据"><a class="header-anchor" href="#3-复制原电脑上的数据">¶</a>3. 复制原电脑上的数据</h1><h2 id="3-1需要复制的"><a class="header-anchor" href="#3-1需要复制的">¶</a>3.1需要复制的</h2><div class="note note-info">            <ul><li><p>_config.yml：站点配置/对应的主题配置</p></li><li><p>package.json：说明使用那些包</p></li><li><p>scaffolds：文章的模板</p></li><li><p>source：自己写的博客文件</p></li><li><p>themes：主题</p></li><li><p>.gitignore：限定在提交的时候哪些文件可以忽略</p></li></ul>          </div><h1 id="4-新建一个博客文件，将复制的文件粘贴进去"><a class="header-anchor" href="#4-新建一个博客文件，将复制的文件粘贴进去">¶</a>4.新建一个博客文件，将复制的文件粘贴进去</h1><p>在git bash中切换目录到新拷贝的文件夹里，使用npm install 命令，进行模块安装。很明显我们这里没用hexo init初始化，因为有的文件我们已经拷贝生成过来了，所以不必用hexo init去整体初始化，如果不慎在此时用了hexo init，则站点的配置文件_config.yml里面内容会被清空使用默认值，所以这一步一定要慎重，不要用hexo init。</p><h1 id="5-安装其他插件"><a class="header-anchor" href="#5-安装其他插件">¶</a>5.安装其他插件</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install hexo-deployer-git --save <span class="hljs-comment"># 为了使用hexo d来部署到git上 </span><br><span class="hljs-comment">#下面可以省略</span><br>npm install hexo-generator-feed --save <span class="hljs-comment"># 为了建立RSS订阅</span><br>npm install hexo-generator-sitemap --save <span class="hljs-comment"># 为了建立站点地图</span><br><br></code></pre></td></tr></table></figure><h1 id="6-验证"><a class="header-anchor" href="#6-验证">¶</a>6.验证</h1><p>首先本地执行，在博客根目录下执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo g<br>hexo s<br><br></code></pre></td></tr></table></figure><p>此时可访问浏览器：<a href="http://localhost:4000/">http://localhost:4000/</a> ，查看是否转移成功。</p><h1 id="7-部署"><a class="header-anchor" href="#7-部署">¶</a>7.部署</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git常用命令</title>
    <link href="/posts/953.html"/>
    <url>/posts/953.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Git常用指令"><a class="header-anchor" href="#Git常用指令">¶</a>Git常用指令</h1><div class="note note-info">            <h1 id="设置全局的用户名称"><a class="header-anchor" href="#设置全局的用户名称">¶</a>设置全局的用户名称</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br></code></pre></td></tr></table></figure><h1 id="设置全局的邮箱地址"><a class="header-anchor" href="#设置全局的邮箱地址">¶</a>设置全局的邮箱地址</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git config --global user.email <span class="hljs-string">&quot;邮箱地址&quot;</span><br></code></pre></td></tr></table></figure><h1 id="查看全局配置信息"><a class="header-anchor" href="#查看全局配置信息">¶</a>查看全局配置信息</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git config --list<br></code></pre></td></tr></table></figure><h1 id="创建本地仓库"><a class="header-anchor" href="#创建本地仓库">¶</a>创建本地仓库</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git init<br></code></pre></td></tr></table></figure><h1 id="添加到暂存区"><a class="header-anchor" href="#添加到暂存区">¶</a>添加到暂存区</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">git add 文件名称<br><span class="hljs-comment">#回撤</span><br>git <span class="hljs-built_in">rm</span> --cached 文件名称<br></code></pre></td></tr></table></figure><h1 id="查看文件状态"><a class="header-anchor" href="#查看文件状态">¶</a>查看文件状态</h1><p>红色代表没有被git管理的文件，即使是已经管理过，但是修改后，也是红色的状态</p><p>绿色代表添加到暂存区的文件</p><p>已暂存：文件被管理到暂存区，绿色</p><p>未修改：文件还没有被管理到暂存区，红色</p><p>已提交：文件已经交给git仓库进行管理了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git status<br></code></pre></td></tr></table></figure><h1 id="提交到本地仓库"><a class="header-anchor" href="#提交到本地仓库">¶</a>提交到本地仓库</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git commit -m <span class="hljs-string">&quot;日志信息&quot;</span><br></code></pre></td></tr></table></figure><h1 id="查看日志信息"><a class="header-anchor" href="#查看日志信息">¶</a>查看日志信息</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看本地日志信息</span><br>git <span class="hljs-built_in">log</span><br><span class="hljs-comment"># 查看本地日志信息，简介模式</span><br>git <span class="hljs-built_in">log</span> --oneline<br><span class="hljs-comment"># 查看历史日志信息</span><br>git reflog<br><span class="hljs-comment">#查看文件内容</span><br><span class="hljs-built_in">cat</span> 文件名称<br></code></pre></td></tr></table></figure><h1 id="版本切换"><a class="header-anchor" href="#版本切换">¶</a>版本切换</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git reset --hard 版本唯一标识<br></code></pre></td></tr></table></figure><h1 id="查看提交文件的内容"><a class="header-anchor" href="#查看提交文件的内容">¶</a>查看提交文件的内容</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看此次提交的文件列表</span><br>git ls-tree commit唯一标识<br><br><span class="hljs-comment"># 查看文件列表中的文件内容</span><br>git cat-file blob 文件的唯一标识<br></code></pre></td></tr></table></figure><h1 id="文件内容比较"><a class="header-anchor" href="#文件内容比较">¶</a>文件内容比较</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 比较的是本地仓库的工作目录的文件差异</span><br>git diff 文件名称<br><br><span class="hljs-comment"># 其他版本的文件比较，比较的是其他版本的本地仓库的内容和当前的文件的差异</span><br>git diff 版本标识 文件名称<br></code></pre></td></tr></table></figure><h1 id="文件删除"><a class="header-anchor" href="#文件删除">¶</a>文件删除</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><br><span class="hljs-comment"># 如果文件没有被本地仓库管理，那么可以直接删除</span><br><span class="hljs-comment"># 如果文件已经被本地仓库管理，那么直接删除，本地仓库中还是包含这个文件的</span><br><span class="hljs-comment"># 先删除文件，再添加到暂存区，然后提交到本地仓库中</span><br><span class="hljs-built_in">rm</span> -rf 文件名称<br><br>git add .<br><br>git commit -m <span class="hljs-string">&quot;日志信息&quot;</span><br></code></pre></td></tr></table></figure><h1 id="文件找回"><a class="header-anchor" href="#文件找回">¶</a>文件找回</h1><p>通过版本切换的命令，切换到没有删除的版本当中即可，保存好你当前的代码，再去操作</p><h1 id="git分支命令"><a class="header-anchor" href="#git分支命令">¶</a>git分支命令</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#查看分支</span><br>git branch<br><span class="hljs-comment">#创建分支 创建的新的分支和当前分支的内容是一致的</span><br>git branch 分支名称<br><span class="hljs-comment">#切换分支</span><br>git checkout 分支名称<br><span class="hljs-comment">#切换并创建分支</span><br>git checkout -b 分支名称 <br><span class="hljs-comment">#删除分支</span><br><span class="hljs-comment">#创建出的分支如果没有被修改，可以通过普通的方式进行删除</span><br><span class="hljs-comment">#创建出的分支如果被修改过，那么就必须强制删除了</span><br> <span class="hljs-comment"># 普通删除</span><br> git branch -d 分支名称<br> <br> <span class="hljs-comment"># 强制删除</span><br> git branch -D 分支名称<br> <span class="hljs-comment"># 分支合并</span><br><span class="hljs-comment">#将目标分支合并到当前分支中，合并的是文件夹、文件、文件内容</span><br><span class="hljs-comment">#这里要注意的是，如果两个分支或多个开发者修改了同一个文件，就会产生冲突的问题</span><br>git merge 目标分支名称<br><br><br></code></pre></td></tr></table></figure><h1 id="冲突解决"><a class="header-anchor" href="#冲突解决">¶</a>冲突解决</h1><p>解决冲突也非常简单，删除标记 <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code> <code>===========</code> <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>，保留代码，提交到本地仓库即可，同时也可以推送到远程仓库</p><h1 id="git远程命令"><a class="header-anchor" href="#git远程命令">¶</a>git远程命令</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#关联远程仓库</span><br><span class="hljs-comment"># 建立远程仓库的关联关系，可以建立多个</span><br>git remote add 关联名称 仓库地址<br><br><span class="hljs-comment"># 查询当前本地仓库关联的远程仓库关系</span><br>git remote -v<br></code></pre></td></tr></table></figure><h1 id="删除远程仓库关系"><a class="header-anchor" href="#删除远程仓库关系">¶</a>删除远程仓库关系</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git remote remove 关联名称<br></code></pre></td></tr></table></figure><h1 id="推送本地仓库代码到远程仓库中"><a class="header-anchor" href="#推送本地仓库代码到远程仓库中">¶</a>推送本地仓库代码到远程仓库中</h1><p>第一次推送代码时，会输入用户名和密码</p><p>如果密码输入错误，清理windows的git凭证，重新推送，输入用户名和密码</p><p>***注意先从远程仓库更新代码下来再进行推送</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><br>git push 关联名称 本地仓库分支名称<br></code></pre></td></tr></table></figure><h1 id="删除远程分支"><a class="header-anchor" href="#删除远程分支">¶</a>删除远程分支</h1><p>除了远程仓库的默认分支外，其余分支都可以被删除掉</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git push -d 关联名称 远程分支名称<br></code></pre></td></tr></table></figure><h1 id="拉取代码"><a class="header-anchor" href="#拉取代码">¶</a>拉取代码</h1><p>拉取本地已有的分支代码，更新代码</p><p>拉取本地没有的代码，更新分支</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 将当前远程分支代码更新到本地所处分支</span><br>git pull 关联名称 远程分支名称<br><br><span class="hljs-comment"># 将远程仓库的分支更新下来</span><br>git pull 关联名称 远程分支名称:本地分支名称<br><br><span class="hljs-comment"># 如果强制的要求远程分支和本地分支进行合并需要指定参数--allow-unrelated-histories</span><br>git pull 关联名称 远程分支名称 --allow-unrelated-histories<br><br></code></pre></td></tr></table></figure><h1 id="每次代码提交前可以做此操作，可以解决冲突"><a class="header-anchor" href="#每次代码提交前可以做此操作，可以解决冲突">¶</a>每次代码提交前可以做此操作，可以解决冲突</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#切换上一次提交工作区</span><br>git stash<br><span class="hljs-comment">#拉代码</span><br>git pull 远程连接名 分支<br><span class="hljs-comment">#恢复工作区</span><br>git stash pop<br><span class="hljs-comment">#有冲突解决冲突 ，提交代码</span><br></code></pre></td></tr></table></figure>          </div>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo用户手册</title>
    <link href="/posts/984.html"/>
    <url>/posts/984.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="关于指南"><a class="header-anchor" href="#关于指南">¶</a>关于指南</h1><div class="note note-success">            <p>TIP</p><p>致主题的新用户：</p><p>本指南经过数个版本打磨，绝大部分的功能都有详细说明，请仔细阅读，节约自己和他人的时间；</p><p>本指南中提到的：“站点配置” 指的 Hexo 博客目录下的 _config.yml，“主题配置” 指的是 theme/fluid/_config.yml 或者 _config.fluid.yml ，注意区分；</p><p>本指南中提到的 source 目录都指的是博客目录下的 source 文件夹，不推荐修改主题内 source 目录；</p><p>每次无论 hexo g 或 hexo s，都最好先使用 hexo clean 清除本地缓存；</p><p>页面结果以本地 hexo s 为准，部署后的异常大部分是线上缓存原因，在确认没有报错的情况下，等待若干时间后即可正常；</p><p>由于主题的不同版本会存在配置差异，本指南以最新版本为准。</p>          </div><h1 id="hexo-常用指令"><a class="header-anchor" href="#hexo-常用指令">¶</a>hexo 常用指令</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#清空生成文件</span><br>hexo clean<br><br><span class="hljs-comment">#生成文文件</span><br>hexo g<br><br><span class="hljs-comment">#本地部署</span><br>hexo s<br><br><span class="hljs-comment">#远程部署</span><br>hexo d<br></code></pre></td></tr></table></figure><p>先清空在生成在部署</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/posts/7252.html"/>
    <url>/posts/7252.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="你好"><a class="header-anchor" href="#你好">¶</a>你好</h3><p>世界</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a class="header-anchor" href="#Quick-Start">¶</a>Quick Start</h2><h3 id="Create-a-new-post"><a class="header-anchor" href="#Create-a-new-post">¶</a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a class="header-anchor" href="#Run-server">¶</a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a class="header-anchor" href="#Generate-static-files">¶</a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a class="header-anchor" href="#Deploy-to-remote-sites">¶</a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>58f30ab21e1a7e7b84d4</p><p>8699b5097ea2ffc44ea51660f3147c9f46e5f42f</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/posts/7251.html"/>
    <url>/posts/7251.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a class="header-anchor" href="#Quick-Start">¶</a>Quick Start</h2><h3 id="Create-a-new-post"><a class="header-anchor" href="#Create-a-new-post">¶</a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a class="header-anchor" href="#Run-server">¶</a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a class="header-anchor" href="#Generate-static-files">¶</a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a class="header-anchor" href="#Deploy-to-remote-sites">¶</a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
